#!/usr/bin/env python3

# Copyright 2021 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
Get pool UUID from the string which is the filesystem symlink
"""

# isort: STDLIB
import argparse
import os

# isort: THIRDPARTY
import dbus

_SERVICE = "org.storage.stratis2"
_POOL_IFACE = "org.storage.stratis2.pool"
_TIMEOUT = 120000


def main():
    """
    The main method.
    """
    parser = argparse.ArgumentParser(description="ask D-Bus for pool UUID")
    parser.add_argument("symlink", help="symlink to convert")
    args = parser.parse_args()

    pool_name = [s for s in os.path.normpath(args.symlink).split("/") if s != ""][2]

    bus = dbus.SystemBus()

    proxy = bus.get_object(_SERVICE, "/org/storage/stratis2", introspect=False)

    object_manager = dbus.Interface(proxy, "org.freedesktop.DBus.ObjectManager")
    managed_objects = object_manager.GetManagedObjects(_TIMEOUT)

    props = next(
        obj_data[_POOL_IFACE]
        for _, obj_data in managed_objects.items()
        if _POOL_IFACE in obj_data and obj_data[_POOL_IFACE]["Name"] == pool_name
    )

    print(props["Uuid"])


if __name__ == "__main__":
    main()
